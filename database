# gurveer
week 3
create table veggies (
 veggie_id varchar (20),
 veggie_price varchar (20),
 veggie_name varchar (20),

 primary key (veggie_id),
 );
select*from veggies   select*from lot
delete veggies

insert into  veggies (veggie_id, veggie_price,veggie_name) 
values ('1',1,'Carrots');
insert into  veggies (veggie_id, veggie_price,veggie_name) 
values ('2',1,'Carrots');
insert into  veggies (veggie_id, veggie_price,veggie_name) 
values ('3',1,'Carrots');
insert into  veggies (veggie_id, veggie_price,veggie_name) 
values ('4',1,'Carrots');
insert into  veggies (veggie_id, veggie_price,veggie_name) 
values ('5',1,'Carrots');
insert into  veggies (veggie_id, veggie_price,veggie_name) 
values ('6',1,'Carrots');
insert into  veggies (veggie_id, veggie_price,veggie_name) 
values ('7',1,'Carrots');
insert into  veggies (veggie_id, veggie_price,veggie_name) 
values ('8',1,'Carrots');
insert into  veggies (veggie_id, veggie_price,veggie_name) 
values ('9',1,'Carrots');
insert into  veggies (veggie_id, veggie_price,veggie_name) 
values ('10',1,'carrots');
insert into  veggies (veggie_id, veggie_price,veggie_name) 
values ('11',1,'carrots');
insert into  veggies (veggie_id, veggie_price,veggie_name) 
values ('12',1,'carrots');

select* from veggies
inner join lot on veggies. veggie_id = lot.veggie_id

select* from veggies , lot
where veggies.veggie_id = lot.veggie_id

select lot.quantity_of_vegatables*veggie_name from lot , veggies
where lot.lot_id=veggies.veggie_id



week 4
create table Warehouse (
 Item_number varchar (20),
 Item_description varchar (20),
 shelve_number varchar (20),
 Quantity_in_stock int,
 price int,
 primary key (Item_number),
 );
 select*from Warehouse


 create table truck (
 truck_number varchar (20),
 driver_name varchar (20),
 order_number varchar (20),
 primary key (truck_number),
 );
 select*from truck


 insert into Warehouse




insert into  warehouse (Item_number, Item_description ,shelve_number,Quantity_in_stock, price) 
values ('1','Fridge','4' ,'9','2');

insert into  warehouse (Item_number, Item_description ,shelve_number,Quantity_in_stock, price) 
values ('2','machine','6' ,'6','9');

insert into  warehouse (Item_number, Item_description ,shelve_number,Quantity_in_stock, price) 
values ('3','perfume','9' ,'3','1');

insert into  warehouse (Item_number, Item_description ,shelve_number,Quantity_in_stock, price) 
values ('4','microwave','5' ,'4','4');

insert into  warehouse (Item_number, Item_description ,shelve_number,Quantity_in_stock, price) 
values ('5','bed','2' ,'5','5');


select*from Warehouse




delete Warehouse

insert into  truck( truck_number, driver_name ,order_number) 
values ('a101','amrit','11');
insert into  truck( truck_number, driver_name ,order_number) 
values ('a102','ram','22');
insert into  truck( truck_number, driver_name ,order_number) 
values ('a103','john','33');
insert into  truck( truck_number, driver_name ,order_number) 
values ('a104','john','44');
insert into  truck( truck_number, driver_name ,order_number) 
values ('a105','john','55');


select*from truck

delete truck
create table orders (
order_id varchar (20),
Item_number varchar (20),
truck_number varchar (20),
primary key (order_id),
 );
  select*from orders


  
insert into  orders( order_id, Item_number ,truck_number) 
values ('11','1','a101');
  
insert into  orders( order_id, Item_number ,truck_number) 
values ('22','2','a102');  
insert into  orders( order_id, Item_number ,truck_number) 
values ('33','3','a103');
  
insert into  orders( order_id, Item_number ,truck_number) 
values ('44','4','a104');  
insert into  orders( order_id, Item_number ,truck_number) 
values ('55','5','a105');

select*from orders
delete orders

select* from orders  O,truck t, Warehouse W
where O.Item_number = W.Item_number and t.truck_number=O.truck_number





use farmerjoe_
go
select veggies.veggie_id, veggies.veggie_name, lot.lot_id, lot.lot_name from veggies

inner join lot
on lot.veggie_id , veggies.veggie_id
order by veggies.veggie_id




// insert stored proc sql to generate WAREHOUSE TABLE
CREATE PROCEDURE Generatewarehousetable
AS
BEGIN
SET NOCOUNT ON;
Create table Warehouse(
Item_Id Varchar(20),
Item_Discription Varchar(20),
Item_Qty int,
Item_cost money,
Primary key (Item_Id)
);
END
GO
  
// insert stored proc sql to generate ORDER TABLE
  
// insert stored proc sql to generate TRUCKS TABLE
  
// insert stored proc sql to insert ORDER TABLE data
  
// insert stored proc sql to insert TRUCKS TABLE data
  
// insert stored proc sql to insert WAREHOUSE TABLE data
  
// insert stored proc sql to GENERATE THE PACKING LIST
use kiwi
 
create procedure Warehouse_data_
as
begin
 set nocount on
INSERT INTO Warehouse (Item_id, Item_Qty, Item_cost, Item_Discription)  VALUES ( 1  , 23, '200','Iphone 7');
INSERT INTO Warehouse (Item_id, Item_Qty, Item_cost, Item_Discription)  VALUES ( 2  , 56 , '345','Tablet');
INSERT INTO Warehouse (Item_id, Item_Qty, Item_cost, Item_Discription)  VALUES ( 3  , 89 , '657','Samsung Tv');
INSERT INTO Warehouse (Item_id, Item_Qty, Item_cost, Item_Discription)  VALUES ( 4  ,  34,'700' ,'Mac');
INSERT INTO Warehouse (Item_id, Item_Qty, Item_cost, Item_Discription)  VALUES ( 6  , 67   ,'100' ,'Personal Computer');
INSERT INTO Warehouse (Item_id, Item_Qty, Item_cost, Item_Discription)  VALUES ( 7  ,  45  ,'10000' ,'Hower');
INSERT INTO Warehouse (Item_id, Item_Qty, Item_cost, Item_Discription)  VALUES ( 8  ,  67  ,'500' ,'Furniture');
INSERT INTO Warehouse (Item_id, Item_Qty, Item_cost, Item_Discription)  VALUES ( 9  ,   90 ,'400' ,'Dressing Table ');
INSERT INTO Warehouse (Item_id, Item_Qty, Item_cost, Item_Discription)  VALUES ( 10  ,  23  , '690','Clothes');
end
 
 
 
 
CREATE PROCEDURE dbo.GenerateOrdersTable
AS
BEGIN
SET NOCOUNT ON;
CREATE TABLE ORDERS(
ORDER_ID VARCHAR(20),
ITEM_QTY INT,
ITEM_ID VARCHAR(20),
TRUCK_ID VARCHAR(20),
PRIMARY KEY (ORDER_ID)
);
END
GO
SELECT*FROM ORDERS
 
 
 
 
CREATE PROCEDURE generateorderdata
AS
BEGIN
    SET NOCOUNT ON;
INSERT INTO ORDERS (ORDER_ID, ITEM_QTY, ITEM_ID, TRUCK_ID) VALUES ('1', '2', '1', 'T1');
INSERT INTO ORDERS (ORDER_ID, ITEM_QTY, ITEM_ID, TRUCK_ID) VALUES ('2', '1', '2', 'T2');
INSERT INTO ORDERS (ORDER_ID, ITEM_QTY, ITEM_ID, TRUCK_ID) VALUES ('3', '3', '3', 'T3');
INSERT INTO ORDERS (ORDER_ID, ITEM_QTY, ITEM_ID, TRUCK_ID) VALUES ('4', '1', '4', 'T4');
INSERT INTO ORDERS (ORDER_ID, ITEM_QTY, ITEM_ID, TRUCK_ID) VALUES ('5', '1', '5', 'T5');
INSERT INTO ORDERS (ORDER_ID, ITEM_QTY, ITEM_ID, TRUCK_ID) VALUES ('6', '1', '6', 'T6');
INSERT INTO ORDERS (ORDER_ID, ITEM_QTY, ITEM_ID, TRUCK_ID) VALUES ('7', '1', '7', 'T7');
INSERT INTO ORDERS (ORDER_ID, ITEM_QTY, ITEM_ID, TRUCK_ID) VALUES ('8', '3', '8', 'T8');
INSERT INTO ORDERS (ORDER_ID, ITEM_QTY, ITEM_ID, TRUCK_ID) VALUES ('9', '4', '9', 'T9');
INSERT INTO ORDERS (ORDER_ID, ITEM_QTY, ITEM_ID, TRUCK_ID) VALUES ('10', '5', '10', 'T10');
INSERT INTO ORDERS (ORDER_ID, ITEM_QTY, ITEM_ID, TRUCK_ID) VALUES ('11', '3', '11', 'T11');
INSERT INTO ORDERS (ORDER_ID, ITEM_QTY, ITEM_ID, TRUCK_ID) VALUES ('12', '4', '12', 'T12');
END
GO
 
 
 
CREATE PROCEDURE dbo.GenerateTrucksTable
AS
BEGIN
    SET NOCOUNT ON;
create table TRUCKS(
TRUCK_ID varchar(20),
TRUCK_NUMBER varchar(20),
primary key (TRUCK_ID)
);
END
GO
 
CREATE PROCEDURE InsertTrucksData
AS
BEGIN
    SET NOCOUNT ON;
Insert into TRUCKS(TRUCK_ID,TRUCK_NUMBER)
 VALUES ('T1','123');
Insert into TRUCKS(TRUCK_ID,TRUCK_NUMBER )
 VALUES ('T2','356');
Insert into TRUCKS(TRUCK_ID,TRUCK_NUMBER ) 
VALUES ('T3','908');
Insert into TRUCKS(TRUCK_ID,TRUCK_NUMBER)
 VALUES ('T4','675');
Insert into TRUCKS(TRUCK_ID,TRUCK_NUMBER 
) VALUES ('T5','234');
Insert into TRUCKS(TRUCK_ID,TRUCK_NUMBER)
 VALUES ('T6','098');
Insert into TRUCKS(TRUCK_ID,TRUCK_NUMBER)
 VALUES ('T7','789');
Insert into TRUCKS(TRUCK_ID,TRUCK_NUMBER)
 VALUES ('T8','906');
Insert into TRUCKS(TRUCK_ID,TRUCK_NUMBER)
 VALUES ('T9','453');
Insert into TRUCKS(TRUCK_ID,TRUCK_NUMBER)
 VALUES ('T10','210');
  
END
GO







create table HOTEL_SERVICES (
 CUSTOMER_ID varchar (20),
 HOTEL_ENTERTAINMENT varchar (20),
 HOTEL_SPECIALOFFER varchar (20),
 HOTEL_SECURITY varchar (20),

 primary key (CUSTOMER_ID),
 );

 create table ROOM_SCHEDULE(
 ROOM_NUMBER varchar (20),
 CANCEL_RESERVATION varchar (20),
 CUSTOMER_ID varchar (20),
 CHECK_IN varchar (20),
 CHECK_OUT varchar (20),

 primary key (ROOM_NUMBER),
 );

 
 create table FOOD_SERVING(
 CHEF_ID varchar (20),
 MENU_MAKING varchar (20),
 ROOM_NUMBER varchar (20),
 FOOD_SCHEDULE varchar (20),

 primary key (CHEF_ID),
 );

  create table HOTEL_CLEANING(
 STAFF_ID varchar (20),
 ROOM_NUMBER varchar (20),

 primary key (STAFF_ID),
 );
 
 
 
 
CREATE PROCEDURE GeneratePackingSheet 
AS
BEGIN
    SET NOCOUNT ON;
 
    select * from ORDERS as O, TRUCKS as T, Warehouse as W
    where O.ITEM_ID = W.ITEM_ID and O.TRUCK_ID = T.TRUCK_ID 
 
END
GO



select(c.cost_of_cloth*s.qty) total_value, c.type_of_cloth from CLOTHES c , CLOTHINGSTORE s , ORDERS o 
where type_of_cloth = 'Jacket' and c.cloth_id = o.cloth_id and o.cloth_id = s.cloth_id







asssignment 10% november 6




USE adventureWorkS2012

select * from dbo.pickering

where solddate > '2019/9/1'

order by dbo.pickering.solddate asc;

select count(*) from dbo.bramptondata
where solddate >= '2019/9/1'



select  Type, 
avg ([Sold Price]) as average , Description from bramptondata 
group by  Type	, Description


select  Type, 
avg ([Sold Price]) as average , Description , Bedroom from bramptondata 
group by  Type	, Description , Bedroom
order by avg([Sold Price]) desc;
 
 
 
 

select Community, type, description, bedroom ,
avg([Sold Price]) as AVGSoldPrice
from bramptondata
where Bedroom between 2 and 3
group by ([Sold Price]), Community, type, description, Bedroom
order by avg([Sold Price]) desc;


select Community, type, description, bedroom, solddate,
avg([sold price]) as AVGSoldPrice
from bramptondata
where month(SoldDate) between 9 and 10
group by SoldDate, Community, type, description, Bedroom
order by avg([sold price]) desc;




select* from tblTransaction
select* from tblDepartment
select* from tblEmployee

select* from tblTransaction as T
inner join tblEmployee as E
on E.EmployeeNumber = T.EmployeeNumber
where EmployeeLastName not like 'a%m'


select count(*), EmployeeLastName
from tblTransaction as T 
left join tblEmployee as E
on E.EmployeeNumber = T.EmployeeNumber
where EmployeeLastName not like 'a%m'
group by EmployeeLastName
